{"version":3,"sources":["/source/d3_renderers.coffee","d3_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","pivotUtilities","d3_renderers","Treemap","pivotData","opts","addToTree","color","defaults","height","i","len","margin","ref","result","rowKey","tree","treemap","value","width","localeStrings","extend","css","name","children","path","child","newChild","x","length","shift","push","getRowKeys","getAggregator","d3","scale","category10","window","layout","size","sticky","d","select","append","style","datum","selectAll","data","padding","nodes","enter","attr","text","call","this","y","Math","max","dx","dy"],"mappings":"CAAA,WAAA,GAAAA,IAAAA,EAAiB,SAACC,GACd,MAAqB,gBAAlBC,UAAgD,gBAAjBC,QAC9BF,EAAYG,QAAQ,WACC,kBAAjBC,SAAgCA,OAAOC,IAC3CD,QAAQ,UAAWJ,GAGnBA,EAAYM,UAEL,SAACC,GCKZ,MDHAA,GAAEC,eAAeC,cAAeC,QAAS,SAACC,EAAWC,GACjD,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAsBA,KAtBAX,GACIY,kBAEJf,EAAOL,EAAEqB,OAAOb,EAAUH,GAG1BS,EAASd,EAAE,SAASsB,KAAIH,MAAO,OAAQV,OAAQ,SAE/CO,GAAOO,KAAM,MAAOC,aACpBlB,EAAY,SAACU,EAAMS,EAAMP,GACrB,GAAAQ,GAAAhB,EAAAC,EAAAgB,EAAAd,EAAAe,CAAA,IAAkB,IAAfH,EAAKI,OAEJ,YADAb,EAAKE,MAAQA,EAIjB,KCQmB,MAAjBF,EAAKQ,WDVPR,EAAKQ,aACLI,EAAIH,EAAKK,QACTjB,EAAAG,EAAAQ,SAAAd,EAAA,EAAAC,EAAAE,EAAAgB,OAAAlB,EAAAD,EAAAA,ICeA,GADAgB,EAAQb,EAAIH,GDdoBgB,EAAMH,OAAQK,EAE1C,WADAtB,GAAUoB,EAAOD,EAAMP,ECwB7B,ODtBES,IAAWJ,KAAMK,GACjBtB,EAAUqB,EAAUF,EAAMP,GAC1BF,EAAKQ,SAASO,KAAKJ,IAEvBd,EAAAT,EAAA4B,aAAAtB,EAAA,EAAAC,EAAAE,EAAAgB,OAAAlB,EAAAD,EAAAA,ICsBEK,EAASF,EAAIH,GDrBXQ,EAAQd,EAAU6B,cAAclB,MAAYG,QACzC,MAAAA,GACCZ,EAAUU,EAAMD,EAAQG,EAgChC,OA9BAX,GAAQ2B,GAAGC,MAAMC,aACjBjB,EAAQnB,EAAEqC,QAAQlB,QAAU,IAC5BV,EAAST,EAAEqC,QAAQ5B,SAAW,IAC9BG,EAAS,GAETK,EAAUiB,GAAGI,OAAOrB,UACfsB,MAAMpB,EAAOV,IACb+B,QAAO,GACPtB,MAAO,SAACuB,GCoBX,MDpBiBA,GAAEF,OAErBL,GAAGQ,OAAO5B,EAAO,IACZ6B,OAAO,OACHC,MAAM,WAAY,YAClBA,MAAM,QAAUzB,EAAe,EAAPP,EAAY,MACpCgC,MAAM,SAAWnC,EAAgB,EAAPG,EAAY,MACtCgC,MAAM,OAAQhC,EAAS,MACvBgC,MAAM,MAAOhC,EAAS,MAC1BiC,MAAM7B,GAAM8B,UAAU,SAClBC,KAAK9B,EAAQ+B,SAAS,GAAG,EAAE,EAAE,IAAI9B,MAAO,SAACuB,GCahD,MDbsDA,GAAEvB,QAAQ+B,OAC7DC,QAAQP,OAAO,OACfQ,KAAK,QAAS,QACdP,MAAM,aAAc,SAACH,GAAM,MAAG,OAAAA,EAAAjB,SAAiB,YAAiBjB,EAAMkC,EAAElB,QACxE6B,KAAM,SAACX,GCiBV,MDjBgBA,GAAElB,OACf8B,KAAK,WACEC,KAAKV,MAAM,OAAS,SAACH,GCkB7B,MDlBmCA,GAAEb,EAAE,OAC1BgB,MAAM,MAAS,SAACH,GCmB7B,MDnBmCA,GAAEc,EAAE,OAC1BX,MAAM,QAAS,SAACH,GCoB7B,MDpBmCe,MAAKC,IAAI,EAAGhB,EAAEiB,GAAK,GAAG,OAC5Cd,MAAM,SAAS,SAACH,GCqB7B,MDrBmCe,MAAKC,IAAI,EAAGhB,EAAEkB,GAAK,GAAG,SAGtD7C,QC0BZuC,KAAKC","file":"d3_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n        \ncallWithJQuery ($) ->\n\n    $.pivotUtilities.d3_renderers = Treemap: (pivotData, opts) ->\n        defaults =\n            localeStrings: {}\n\n        opts = $.extend defaults, opts\n\n\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\")\n\n        tree = name: \"All\", children: []\n        addToTree = (tree, path, value) ->\n            if path.length == 0\n                tree.value = value\n                return\n            tree.children ?= []\n            x = path.shift()\n            for child in tree.children when child.name == x\n                addToTree(child, path, value)\n                return\n            newChild = name: x\n            addToTree(newChild, path, value)\n            tree.children.push newChild\n\n        for rowKey in pivotData.getRowKeys()\n            value = pivotData.getAggregator(rowKey, []).value()\n            if value?\n                addToTree(tree, rowKey, value)\n\n        color = d3.scale.category10()\n        width = $(window).width() / 1.4\n        height = $(window).height() / 1.4\n        margin = 10\n\n        treemap = d3.layout.treemap()\n            .size([width, height])\n            .sticky(true)\n            .value( (d) -> d.size )\n\n        d3.select(result[0])\n            .append(\"div\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", (width + margin*2) + \"px\")\n                .style(\"height\", (height + margin*2) + \"px\")\n                .style(\"left\", margin + \"px\")\n                .style(\"top\", margin + \"px\")\n            .datum(tree).selectAll(\".node\")\n                .data(treemap.padding([15,0,0,0]).value( (d) -> d.value ).nodes)\n            .enter().append(\"div\")\n            .attr(\"class\", \"node\")\n            .style(\"background\", (d) -> if d.children? then \"lightgrey\" else color(d.name) )\n            .text( (d) -> d.name )\n            .call ->\n                    this.style(\"left\",  (d) -> d.x+\"px\" )\n                        .style(\"top\",   (d) -> d.y+\"px\" )\n                        .style(\"width\", (d) -> Math.max(0, d.dx - 1)+\"px\" )\n                        .style(\"height\",(d) -> Math.max(0, d.dy - 1)+\"px\" )\n                    return\n        \n        return result\n    \n\n\n","(function(){var e;(e=function(e){return\"object\"==typeof exports&&\"object\"==typeof module?e(require(\"jquery\")):\"function\"==typeof define&&define.amd?define([\"jquery\"],e):e(jQuery)})(function(e){return e.pivotUtilities.d3_renderers={Treemap:function(t,n){var r,i,l,u,o,d,a,c,s,f,h,p,y,g;for(l={localeStrings:{}},n=e.extend(l,n),d=e(\"<div>\").css({width:\"100%\",height:\"100%\"}),c={name:\"All\",children:[]},r=function(e,t,n){var i,l,u,o,d,a;if(0===t.length)return void(e.value=n);for(null==e.children&&(e.children=[]),u=t.shift(),a=e.children,o=0,d=a.length;d>o;o++)if(i=a[o],i.name===u)return void r(i,t,n);return l={name:u},r(l,t,n),e.children.push(l)},g=t.getRowKeys(),p=0,y=g.length;y>p;p++)a=g[p],f=t.getAggregator(a,[]).value(),null!=f&&r(c,a,f);return i=d3.scale.category10(),h=e(window).width()/1.4,u=e(window).height()/1.4,o=10,s=d3.layout.treemap().size([h,u]).sticky(!0).value(function(e){return e.size}),d3.select(d[0]).append(\"div\").style(\"position\",\"relative\").style(\"width\",h+2*o+\"px\").style(\"height\",u+2*o+\"px\").style(\"left\",o+\"px\").style(\"top\",o+\"px\").datum(c).selectAll(\".node\").data(s.padding([15,0,0,0]).value(function(e){return e.value}).nodes).enter().append(\"div\").attr(\"class\",\"node\").style(\"background\",function(e){return null!=e.children?\"lightgrey\":i(e.name)}).text(function(e){return e.name}).call(function(){this.style(\"left\",function(e){return e.x+\"px\"}).style(\"top\",function(e){return e.y+\"px\"}).style(\"width\",function(e){return Math.max(0,e.dx-1)+\"px\"}).style(\"height\",function(e){return Math.max(0,e.dy-1)+\"px\"})}),d}}})}).call(this);\n//# sourceMappingURL=d3_renderers.min.js.map"],"sourceRoot":"/source/"}